// title animation loop
const titles = [
  'üì∫üå∏ JP4U - ‡∏£‡∏ß‡∏°‡∏ä‡πà‡∏≠‡∏á TV ‡∏ç‡∏µ‡πà‡∏õ‡∏∏‡πà‡∏ô',
  'üíØ ‡∏ó‡∏µ‡πà‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡πÉ‡∏ô‡πÄ‡∏°‡∏∑‡∏≠‡∏á‡πÑ‡∏ó‡∏¢',
  'üé¨ ‡∏ö‡∏±‡∏ô‡πÄ‡∏ó‡∏¥‡∏á/‡∏Å‡∏≤‡∏£‡πå‡∏ï‡∏π‡∏ô/‡∏Ç‡πà‡∏≤‡∏ß ‡∏Ñ‡∏£‡∏ö‡∏ó‡∏µ‡πà‡πÄ‡∏î‡∏µ‡∏¢‡∏ß!',
  'üëå ‡∏•‡∏¥‡πâ‡∏á‡∏Ñ‡πå‡∏ï‡∏£‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÇ‡∏Ü‡∏©‡∏ì‡∏≤',
  'üì° ‡∏Å‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡πà‡∏≠‡∏á‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢!',
];

let titleIndex = 0;

setInterval(() => {
  document.title = titles[titleIndex];
  titleIndex = (titleIndex + 1) % titles.length;
}, 3000); // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ó‡∏∏‡∏Å 3 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ


const video = document.getElementById('video');
    const channelNumberDiv = document.getElementById('channelNumber');
    function toggleBorder() {
    if (document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement) {
      video.style.border = 'none';  // ‡∏•‡∏ö border ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏ï‡πá‡∏°‡∏à‡∏≠
    } else {
      video.style.border = '4px solid #fff';  // ‡πÄ‡∏û‡∏¥‡πà‡∏° border ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÇ‡∏´‡∏°‡∏î‡πÄ‡∏ï‡πá‡∏°‡∏à‡∏≠
    }
  }
  

  // ‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà/‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÇ‡∏´‡∏°‡∏î‡πÄ‡∏ï‡πá‡∏°‡∏à‡∏≠
  document.addEventListener('fullscreenchange', toggleBorder);
  document.addEventListener('webkitfullscreenchange', toggleBorder);
  document.addEventListener('mozfullscreenchange', toggleBorder);

  // ‡πÉ‡∏ô‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö fullscreenchange
  video.addEventListener('dblclick', function() {
    if (!document.fullscreenElement && !document.webkitFullscreenElement && !document.mozFullScreenElement) {
      if (video.requestFullscreen) {
        video.requestFullscreen();
      } else if (video.webkitRequestFullscreen) {
        video.webkitRequestFullscreen();
      } else if (video.mozRequestFullScreen) {
        video.mozRequestFullScreen();
      }
    }
  });
    const channelsDiv = document.getElementById('channels');
    let selectedIndex = 0;

    const categories = [
  {
    name: 'Tokyo',
    channels: [0, 1, 2, 3, 4, 5, 6, 7, 8], // index ‡∏à‡∏≤‡∏Å channelNames/playBaseUrls
  }
  
/*, 
 {
    name: 'Kansai',
    channels: [9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],
  },
  {
    name: 'BS (Broadcast Satellite)',
    channels: [28,29,30,31,32,33,34,35,36,37,38,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63],
  },
  {
    name: 'CS (Communication Satellite)',
    channels: [64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88],
  },
  {
    name: 'Niigata',
    channels: [89,90,91,92,93,94,95,96,97,98,99,100,101,],
  },
  {
    name: 'NSFW',
    channels: [102,103,104,105,106,107,108,109,110,111,112,],
  },
     {
    name: '24/7 Shows',
    channels: [113,],
  },
     {
    name: 'Japan with Thai Dub',
    channels: [114,115,116,117,118,119,120,121,122,123,124,125,],
  }
 
 */
];


    const channelNames = [
'‡∏ä‡πà‡∏≠‡∏á NHK G',
'‡∏ä‡πà‡∏≠‡∏á NHK E',
 '‡∏ä‡πà‡∏≠‡∏á NTV',
 '‡∏ä‡πà‡∏≠‡∏á TBS',
 '‡∏ä‡πà‡∏≠‡∏á Fuji TV',
'‡∏ä‡πà‡∏≠‡∏á  TV Asahi',
 '‡∏ä‡πà‡∏≠‡∏á TV Tokyo',
 '‡∏ä‡πà‡∏≠‡∏á TOKYO MX1',
'‡∏ä‡πà‡∏≠‡∏á TOKYO MX2', 
/*
'‡∏ä‡πà‡∏≠‡∏á EPL 5 Backup',
 '‡∏ä‡πà‡∏≠‡∏á 10  Bein 1',
'‡∏ä‡πà‡∏≠‡∏á 11  Bein 1 Backup',
 '‡∏ä‡πà‡∏≠‡∏á 12  Bein 2', 
 '‡∏ä‡πà‡∏≠‡∏á 13 Bein 2 Backup',
'‡∏ä‡πà‡∏≠‡∏á 14 Bein 3',
'‡∏ä‡πà‡∏≠‡∏á 15  Bein 3 Backup',
      '‡∏ä‡πà‡∏≠‡∏á 16 Bein HD 1',
      '‡∏ä‡πà‡∏≠‡∏á 17 Bein HD 2',
      '‡∏ä‡πà‡∏≠‡∏á 18 Bein HD 3',
      '‡∏ä‡πà‡∏≠‡∏á 19 Bein HD 4',
      '‡∏ä‡πà‡∏≠‡∏á 20 Bein HD 5',
      '‡∏ä‡πà‡∏≠‡∏á 21 Bein HD 6',
      '‡∏ä‡πà‡∏≠‡∏á 22 Bein HD 7',
      '‡∏ä‡πà‡∏≠‡∏á 23 Bein HD 8',
      '‡∏ä‡πà‡∏≠‡∏á 24 Bein HD 9',
      '‡∏ä‡πà‡∏≠‡∏á 25 Bein HD 10',
      '‡∏ä‡πà‡∏≠‡∏á 26 Bein HD 11',
      '‡∏ä‡πà‡∏≠‡∏á 27 Bein HD 12',
      '‡∏ä‡πà‡∏≠‡∏á 28 CH3 HD',
      '‡∏ä‡πà‡∏≠‡∏á 29 CH3 HD Backup',
      '‡∏ä‡πà‡∏≠‡∏á 30 CH5 HD',
      '‡∏ä‡πà‡∏≠‡∏á 31 CH5 HD Backup',
      '‡∏ä‡πà‡∏≠‡∏á 32 CH7 HD',
      '‡∏ä‡πà‡∏≠‡∏á 33 CH7 HD Backup',
      '‡∏ä‡πà‡∏≠‡∏á 34 CH9 HD',
      '‡∏ä‡πà‡∏≠‡∏á 35 CH9 HD Backup',
      '‡∏ä‡πà‡∏≠‡∏á 36  WorkPoint HD',
      '‡∏ä‡πà‡∏≠‡∏á 37 WorkPoint HD Backup',
      '‡∏ä‡πà‡∏≠‡∏á 38 GMM HD',
      '‡∏ä‡πà‡∏≠‡∏á 39 GMM HD Backup',
      '‡∏ä‡πà‡∏≠‡∏á 40 MONO HD',
      '‡∏ä‡πà‡∏≠‡∏á 41 MOMO HD Backup',
      '‡∏ä‡πà‡∏≠‡∏á 42 CH8 HD',
      '‡∏ä‡πà‡∏≠‡∏á 43 CH8 HD Backup',
      '‡∏ä‡πà‡∏≠‡∏á 44 ONE HD',
      '‡∏ä‡πà‡∏≠‡∏á 45 ONE HD Backup',
      '‡∏ä‡πà‡∏≠‡∏á 46 Amarin TV HD',
      '‡∏ä‡πà‡∏≠‡∏á 47 Amarin TV HD Backup',
      '‡∏ä‡πà‡∏≠‡∏á 48 Thairath TV HD',
      '‡∏ä‡πà‡∏≠‡∏á 49 Thairath TV HD Backup',
      '‡∏ä‡πà‡∏≠‡∏á 50 PPTV HD',
      '‡∏ä‡πà‡∏≠‡∏á 51 PPTV HD Backup',
      '‡∏ä‡πà‡∏≠‡∏á 52 TRUE 4 U HD',
      '‡∏ä‡πà‡∏≠‡∏á 53 TRUE 4 U HD Backup',
      '‡∏ä‡πà‡∏≠‡∏á 54 Nation TV HD',
      '‡∏ä‡πà‡∏≠‡∏á 55 Nation TV HD Backup',
      '‡∏ä‡πà‡∏≠‡∏á 56 JKN TV HD',
      '‡∏ä‡πà‡∏≠‡∏á 57 JKN TV HD Backup',
      '‡∏ä‡πà‡∏≠‡∏á 58 TNN TV HD',
      '‡∏ä‡πà‡∏≠‡∏á 59 TNN TV HD Backup',
      '‡∏ä‡πà‡∏≠‡∏á 60 Thai PBS TV HD',
      '‡∏ä‡πà‡∏≠‡∏á 61 Thai PBS TV HD Backup',
      '‡∏ä‡πà‡∏≠‡∏á 62 NBT TV HD',
      '‡∏ä‡πà‡∏≠‡∏á 63 NBT TV HD Backup',
      '‡∏ä‡πà‡∏≠‡∏á 64 ASIAN MORE',
      '‡∏ä‡πà‡∏≠‡∏á 65 Warner TV',
      '‡∏ä‡πà‡∏≠‡∏á 66 Waner TV Backup',
      '‡∏ä‡πà‡∏≠‡∏á 67 HBO TV',
      '‡∏ä‡πà‡∏≠‡∏á 68 HBO Family TV',
      '‡∏ä‡πà‡∏≠‡∏á 69 HBO HIT TV',
      '‡∏ä‡πà‡∏≠‡∏á 70 HBO Signature TV',
      '‡∏ä‡πà‡∏≠‡∏á 71 MAX HD TV',
      '‡∏ä‡πà‡∏≠‡∏á 72 MAX HD TV Backup',
      '‡∏ä‡πà‡∏≠‡∏á 73 AXN TV',
      '‡∏ä‡πà‡∏≠‡∏á 74 AXN TV Backup',
      '‡∏ä‡πà‡∏≠‡∏á 75 BLUE ANT TV',
      '‡∏ä‡πà‡∏≠‡∏á 76 BLUE Extreme TV',
      '‡∏ä‡πà‡∏≠‡∏á 77 FILM HD',
      '‡∏ä‡πà‡∏≠‡∏á 78 FILM 2 HD',
      '‡∏ä‡πà‡∏≠‡∏á 79 SERIES',
      '‡∏ä‡πà‡∏≠‡∏á 80 MOVIE HIT TV',
      '‡∏ä‡πà‡∏≠‡∏á 81 Xzyte TV',
      '‡∏ä‡πà‡∏≠‡∏á 82 TRUE THAI FILM TV',
      '‡∏ä‡πà‡∏≠‡∏á 83 Celestial TV',
      '‡∏ä‡πà‡∏≠‡∏á 84 TVN TV',
      '‡∏ä‡πà‡∏≠‡∏á 85 MIX MAJOR TV',
      '‡∏ä‡πà‡∏≠‡∏á 86 ‡∏°‡∏±‡∏á‡∏Å‡∏£ TV',
      '‡∏ä‡πà‡∏≠‡∏á 87 MONO PLUS TV',
      '‡∏ä‡πà‡∏≠‡∏á 88 FILM ASIA TV',
      '‡∏ä‡πà‡∏≠‡∏á 89 Discovery',
      '‡∏ä‡πà‡∏≠‡∏á 90 Discovery',
      '‡∏ä‡πà‡∏≠‡∏á 91 Discovery BK',
      '‡∏ä‡πà‡∏≠‡∏á 92 History',
       '‡∏ä‡πà‡∏≠‡∏á 93 History BK',
	    '‡∏ä‡πà‡∏≠‡∏á 94  FoodNetwork',
       '‡∏ä‡πà‡∏≠‡∏á 95 TLC BK',
       '‡∏ä‡πà‡∏≠‡∏á 96 TLC',
       '‡∏ä‡πà‡∏≠‡∏á 97 EXPLORE LIFE',
	   '‡∏ä‡πà‡∏≠‡∏á 98 EXPLORE WILD',
	   '‡∏ä‡πà‡∏≠‡∏á 99 EXPLORE SCI',
       '‡∏ä‡πà‡∏≠‡∏á 100 ASIAN FOOD CHANNEL',
       '‡∏ä‡πà‡∏≠‡∏á 101 ASIAN FOOD CHANNEL BK',
	    '‡∏ä‡πà‡∏≠‡∏á 102  DREAMWORKS',
		'‡∏ä‡πà‡∏≠‡∏á 103  CARTOON NETWORK',
		'‡∏ä‡πà‡∏≠‡∏á 104  CARTOON NETWORK BK',
		'‡∏ä‡πà‡∏≠‡∏á 105  SPARK PLAY',
		'‡∏ä‡πà‡∏≠‡∏á 106  NICK JR',
		'‡∏ä‡πà‡∏≠‡∏á 107 BOOMERANG',
		'‡∏ä‡πà‡∏≠‡∏á 108  CARTOONITO',
		'‡∏ä‡πà‡∏≠‡∏á 109  DISNEP CHANNEL',
		'‡∏ä‡πà‡∏≠‡∏á 110  DISNEP CHANNEL BK',
		'‡∏ä‡πà‡∏≠‡∏á 111  NICK LODEON',
		'‡∏ä‡πà‡∏≠‡∏á 112 NICK LODEON BK',
		'‡∏ä‡πà‡∏≠‡∏á 113 MTV',
		'‡∏ä‡πà‡∏≠‡∏á 114 TOP NEW',
		'‡∏ä‡πà‡∏≠‡∏á 115 TV ‡∏£‡∏±‡∏ê‡∏™‡∏†‡∏≤',
		'‡∏ä‡πà‡∏≠‡∏á 116 CNN',
		'‡∏ä‡πà‡∏≠‡∏á 117 BLOOMBERG',
		'‡∏ä‡πà‡∏≠‡∏á 118 FOX NEWS',
		'‡∏ä‡πà‡∏≠‡∏á 119 RT NEWS',
		'‡∏ä‡πà‡∏≠‡∏á 120 EURO NEWS',
		'‡∏ä‡πà‡∏≠‡∏á 121 CNBC NEWS',
		'‡∏ä‡πà‡∏≠‡∏á 122 BBC WORLD NEWS',
		'‡∏ä‡πà‡∏≠‡∏á 123 NHK WORLD',
		'‡∏ä‡πà‡∏≠‡∏á 124 CCTV4',
		'‡∏ä‡πà‡∏≠‡∏á 125 NEWS1'
		*/
    ];

    const channelLogos = [
      'https://upload.wikimedia.org/wikipedia/commons/6/6f/NHK%E7%B7%8F%E5%90%88%E3%83%AD%E3%82%B42020-.png', 'https://upload.wikimedia.org/wikipedia/commons/a/aa/NHKE%E3%83%86%E3%83%AC%E3%83%AD%E3%82%B42020-.png',
      'https://upload.wikimedia.org/wikipedia/commons/thumb/5/5e/Nippon_TV_logo_2014.svg/2560px-Nippon_TV_logo_2014.svg.png', 'https://upload.wikimedia.org/wikipedia/commons/thumb/1/14/Tokyo_Broadcasting_System_logo_2020.svg/2560px-Tokyo_Broadcasting_System_logo_2020.svg.png',
      'https://upload.wikimedia.org/wikipedia/fr/thumb/6/65/Fuji_TV_Logo.svg/1049px-Fuji_TV_Logo.svg.png', 'https://upload.wikimedia.org/wikipedia/commons/thumb/5/51/TV_Asahi_Logo.svg/2560px-TV_Asahi_Logo.svg.png',
      'https://upload.wikimedia.org/wikipedia/commons/thumb/0/0c/TV_Tokyo_logo_2023.svg/2560px-TV_Tokyo_logo_2023.svg.png', 'https://upload.wikimedia.org/wikipedia/commons/thumb/6/6f/Tokyo_metropolitan_television_logo_%28rainbow%29.svg/2560px-Tokyo_metropolitan_television_logo_%28rainbow%29.svg.png',
      'https://upload.wikimedia.org/wikipedia/commons/thumb/6/6f/Tokyo_metropolitan_television_logo_%28rainbow%29.svg/2560px-Tokyo_metropolitan_television_logo_%28rainbow%29.svg.png'
    ];

    // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î playBaseUrls ‡πÄ‡∏≠‡∏á
	// ‡∏ä‡πà‡∏≠‡∏á‡πÑ‡∏ó‡∏¢‡∏ó‡∏µ‡πà‡∏â‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡∏ç‡∏µ‡πà‡∏õ‡∏∏‡πà‡∏ô ‡∏°‡∏µ‡∏ö‡πâ‡∏≤‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ö‡πâ‡∏≤‡∏á
    const playBaseUrls = [
	  'http://vthanh.utako.moe/NHK_G/index.m3u8',
	  'http://vthanh.utako.moe/NHK_E/index.m3u8',
	  'http://vthanh.utako.moe/Nippon_TV/index.m3u8',
	  'http://vthanh.utako.moe/Fuji_TV/index.m3u8',
	  'http://vthanh.utako.moe/TV_Asahi/index.m3u8',
	  'http://vthanh.utako.moe/TV_Tokyo/index.m3u8',
	  'http://vthanh.utako.moe/Tokyo_MX1/index.m3u8',
	  'http://luong.utako.moe/mx2test/index.m3u8',
	  
	  // ‡∏ä‡πà‡∏≠‡∏á‡πÑ‡∏ó‡∏¢
      // 'https://cloud.ufxtv.com/api/tv/channels/play/?c=hd-asianmore&kauth=',
      // 'https://cloud.ufxtv.com/api/tv/channels/play/?c=sd-series&kauth=',
      // 'https://cloud.ufxtv.com/api/tv/channels/play/?c=hd-xzyte&kauth=',
      // 'https://cloud.ufxtv.com/api/tv/channels/play/?c=th-monoplus&kauth=',
      // 'https://cloud.ufxtv.com/api/tv/channels/play/?c=sd-filmasia&kauth=',
	  // 'https://cloud.ufxtv.com/api/tv/channels/play/?c=sd-nhkworld&kauth=',
    ];

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏∂‡∏á playlist URL
    async function getPlaylist(user_loggedsession, playBaseUrl) {
  let playUrl = `${playBaseUrl}&user_loggedsession=${user_loggedsession}`;
  let response = await fetch(playUrl);
  let text = await response.text();

  // ‡∏ñ‡πâ‡∏≤ session ‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏
  if (text.includes('session failed')) {
    user_loggedsession = await login();
    playUrl = `${playBaseUrl}&user_loggedsession=${user_loggedsession}`;
    response = await fetch(playUrl);
    text = await response.text();
  }

  // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ
  const hasClearUrl = text.includes('<clear_url>');
  const hasMovieUrl = text.includes('<url>');

  return (hasClearUrl || hasMovieUrl) ? text : null;
}

    




// ‡∏î‡∏∂‡∏á session ‡πÉ‡∏´‡∏°‡πà
async function login() {
  const response = await fetch('https://cloud.ufxtv.com/api/user/login/?user_email=BE0164&user_password=1111&kauth=');
  const text = await response.text();
  const sessionMatch = text.match(/<user_loggedsession>(.*?)<\/user_loggedsession>/);
  return sessionMatch ? sessionMatch[1] : null;
}


    // ‡∏î‡∏∂‡∏á clear_url ‡∏à‡∏≤‡∏Å response XML
    function extractClearUrl(xml) {
      const match = xml.match(/<clear_url>(.*?)<\/clear_url>/);
      return match ? match[1] : null;
    }

    function renderCategories() {
  const categoriesDiv = document.getElementById('categories');
  categoriesDiv.innerHTML = '';
  categoriesDiv.style.display = 'flex';
  channelsDiv.style.display = 'none';

  categories.forEach((cat, idx) => {
    const button = document.createElement('div');
    button.classList.add('channel-button');
    button.tabIndex = 0;
    button.innerHTML = `<div>${idx + 1}. ${cat.name}</div>`;
    button.onclick = () => showChannelsInCategory(idx);
    button.onkeydown = (e) => {
      if (e.key === 'Enter') showChannelsInCategory(idx);
    };
    categoriesDiv.appendChild(button);
  });
}

function showChannelsInCategory(catIndex) {
  const category = categories[catIndex];

  
  if (category.name === '3BB') {
    window.open('https://bestcommt2.github.io/3bb/3bb.html', '_self');
    return;
  }

  // ‡πÅ‡∏™‡∏î‡∏á‡∏ä‡πà‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
  channelsDiv.innerHTML = '';
  channelsDiv.style.display = 'flex';
  document.getElementById('categories').style.display = 'none';

  category.channels.forEach(i => renderPlaylist(i));

  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏∏‡πà‡∏°‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö
  const backBtn = document.createElement('div');
  backBtn.classList.add('channel-button');
  backBtn.innerHTML = 'üîô ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö';
  backBtn.tabIndex = 0;
  backBtn.onclick = renderCategories;
  backBtn.onkeydown = (e) => {
    if (e.key === 'Enter') renderCategories();
  };
  channelsDiv.appendChild(backBtn);
}




    // ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÅ‡∏ö‡∏ö playlist
    function renderPlaylist(index) {
  const button = document.createElement('div');
  button.classList.add('channel-button');
  button.tabIndex = 0;
  button.innerHTML = ` 
    <img src="${channelLogos[index]}" alt="${channelNames[index]}">
    <div>${index + 1}. ${channelNames[index]}</div>
  `;

  // ‡πÇ‡∏´‡∏•‡∏î playlist ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏•‡∏¥‡∏Å
  button.onclick = () => loadChannelByIndex(index);
  button.onkeydown = (e) => {
    if (e.key === 'Enter') {
      loadChannelByIndex(index);
    }
  };

  channelsDiv.appendChild(button);
}

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
function loadChannel(url, useIframe = false) {
  const video = document.getElementById('video');
  const iframe = document.getElementById('channel-frame');
  const iframeContainer = document.getElementById('iframe-container');

  if (useIframe) {
    // üëâ ‡∏ã‡πà‡∏≠‡∏ô‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠ ‡πÅ‡∏•‡πâ‡∏ß‡πÇ‡∏ä‡∏ß‡πå iframe
    video.style.display = 'none';
    iframeContainer.style.display = 'block';
    iframe.src = url;
  } else {
    // üëâ ‡∏ã‡πà‡∏≠‡∏ô iframe ‡πÅ‡∏•‡πâ‡∏ß‡πÇ‡∏ä‡∏ß‡πå video
    iframeContainer.style.display = 'none';
    video.style.display = 'block';

    if (Hls.isSupported()) {
     const hls = new Hls({
  liveSyncDurationCount: 3,
  liveMaxLatencyDurationCount: 10
});
hls.loadSource(url);
hls.attachMedia(video);

    } else if (video.canPlayType('application/vnd.apple.mpegurl')) {
      video.src = url;
    } else {
      alert('‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö HLS üò•');
    }
  }
}



let session = null;
    // Main
    async function loadChannelByIndex(index) {
  if (!session) {
    session = await login();
    if (!session) {
      alert("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏î‡πâ ‚ùå");
      return;
    }
  }


  if (channelNames[index] === 'BallThai 1') {
    const iframeUrl = 'https://bestcommt2.github.io/true/play%20ballth1.html';
    loadChannel(iframeUrl, true); // ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á await ‡∏ñ‡πâ‡∏≤ loadChannel ‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô async ‡∏Å‡πá‡πÑ‡∏î‡πâ
    return;
  }
  if (channelNames[index] === 'BallThai 2') {
    const iframeUrl = 'https://bestcommt2.github.io/true/play%20ballth2.html';
    loadChannel(iframeUrl, true); // ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á await ‡∏ñ‡πâ‡∏≤ loadChannel ‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô async ‡∏Å‡πá‡πÑ‡∏î‡πâ
    return;
  }
  if (channelNames[index] === 'BallThai 3') {
    const iframeUrl = 'https://bestcommt2.github.io/true/play%20ballth3.html';
    loadChannel(iframeUrl, true); // ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á await ‡∏ñ‡πâ‡∏≤ loadChannel ‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô async ‡∏Å‡πá‡πÑ‡∏î‡πâ
    return;
  }
  if (channelNames[index] === 'BallThai 4') {
    const iframeUrl = 'https://bestcommt2.github.io/true/play%20ballth4.html';
    loadChannel(iframeUrl, true); // ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á await ‡∏ñ‡πâ‡∏≤ loadChannel ‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô async ‡∏Å‡πá‡πÑ‡∏î‡πâ
    return;
  }
  if (channelNames[index] === 'BallThai 5') {
    const iframeUrl = 'https://bestcommt2.github.io/true/play%20ballth5.html';
    loadChannel(iframeUrl, true); // ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á await ‡∏ñ‡πâ‡∏≤ loadChannel ‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô async ‡∏Å‡πá‡πÑ‡∏î‡πâ
    return;
  }
  if (channelNames[index] === 'BallThai 6') {
    const iframeUrl = 'https://bestcommt2.github.io/true/play%20ballth6.html';
    loadChannel(iframeUrl, true); // ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á await ‡∏ñ‡πâ‡∏≤ loadChannel ‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô async ‡∏Å‡πá‡πÑ‡∏î‡πâ
    return;
  }
  if (channelNames[index] === 'BallThai 7') {
    const iframeUrl = 'https://bestcommt2.github.io/true/play%20ballth7.html';
    loadChannel(iframeUrl, true); // ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á await ‡∏ñ‡πâ‡∏≤ loadChannel ‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô async ‡∏Å‡πá‡πÑ‡∏î‡πâ
    return;
  }
  if (channelNames[index] === 'BallThai 8') {
    const iframeUrl = 'https://bestcommt2.github.io/true/play%20ballth8.html';
    loadChannel(iframeUrl, true); // ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á await ‡∏ñ‡πâ‡∏≤ loadChannel ‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô async ‡∏Å‡πá‡πÑ‡∏î‡πâ
    return;
  }
  if (channelNames[index] === '‡∏ä‡πà‡∏≠‡∏á FW SPORT') {
    const iframeUrl = 'https://www.inwiptv.org/player_demo.php?channel=89782';
    loadChannel(iframeUrl, true); // ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á await ‡∏ñ‡πâ‡∏≤ loadChannel ‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô async ‡∏Å‡πá‡πÑ‡∏î‡πâ
    return;
  }
  if (channelNames[index] === 'EPL 1 BLUE') {
    const iframeUrl = 'http://tbtv.me:2095/play/live.php?mac=00:1a:79:80:09:03&stream=186561&extension=m3u8';
    loadChannel(iframeUrl, false); // ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á await ‡∏ñ‡πâ‡∏≤ loadChannel ‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô async ‡∏Å‡πá‡πÑ‡∏î‡πâ
    return;
  }


  const xml = await getPlaylist(session, playBaseUrls[index]);
  console.log("üöÄ ~ loadChannelByIndex ~ xml:", xml)

  const isMovieCategory = categories.find(cat => cat.name === '‡∏î‡∏π‡∏´‡∏ô‡∏±‡∏á'||cat.name === '20+')?.channels.includes(index);

  if (isMovieCategory) {
    // ‡∏î‡∏∂‡∏á‡πÅ‡∏•‡∏∞ decode url ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô <url> ‡πÅ‡∏ó‡∏ô
    const match = xml.match(/<url>(.*?)<\/url>/);
    if (match) {
      const encodedUrl = match[1];
      const decodedUrl = decodeURIComponent(encodedUrl);
      const fixedUrl = decodedUrl.replace('playlist.m3u8', 'chunk.m3u8');
      loadChannel(fixedUrl);
    } else {
      alert('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏•‡∏¥‡∏á‡∏Å‡πå playlist ‚ùå');
    }
  } else {
    // ‡∏´‡∏°‡∏ß‡∏î‡∏≠‡∏∑‡πà‡∏ô ‡πÉ‡∏ä‡πâ‡∏ß‡∏¥‡∏ò‡∏µ‡πÄ‡∏î‡∏¥‡∏°
    const clearUrl = extractClearUrl(xml);
    if (clearUrl) {
      const fixedUrl = clearUrl.replace('playlist.m3u8', 'chunks.m3u8');
      loadChannel(fixedUrl);
    } else {
      alert('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏•‡∏¥‡∏á‡∏Å‡πå playlist ‚ùå');
    }
  }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å
(async () => {
  session = await login();
  if (!session) {
    alert("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏î‡πâ ‚ùå");
    return;
  }

  renderCategories(); // ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
})();


    // ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏π‡∏Å‡∏®‡∏£
    let currentKey = ''
    document.addEventListener('keydown', (e) => {
      const buttons = document.querySelectorAll('.channel-button');
      if (e.key === 'ArrowDown') {
        selectedIndex = (selectedIndex + 3) % buttons.length; // ‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏•‡∏á 3 ‡∏ä‡πà‡∏≠‡∏á
        buttons[selectedIndex].focus();
      } else if (e.key === 'ArrowUp') {
        selectedIndex = (selectedIndex - 3 + buttons.length) % buttons.length; // ‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô 3 ‡∏ä‡πà‡∏≠‡∏á
        buttons[selectedIndex].focus();
      } else if (e.key === 'ArrowLeft') {
        selectedIndex = (selectedIndex - 1 + buttons.length) % buttons.length; // ‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ã‡πâ‡∏≤‡∏¢ 1 ‡∏ä‡πà‡∏≠‡∏á
        buttons[selectedIndex].focus();
      } else if (e.key === 'ArrowRight') {
        selectedIndex = (selectedIndex + 1) % buttons.length; // ‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏Ç‡∏ß‡∏≤ 1 ‡∏ä‡πà‡∏≠‡∏á
        buttons[selectedIndex].focus();
      }


      
  if (!isNaN(e.key)) {
      currentKey += e.key;  
      showChannelNumber(parseInt(currentKey)); 
  } else {
    currentKey = ''
  }

    // ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
    function showChannelNumber(channelNumber) {
  channelNumberDiv.textContent = channelNumber;
  channelNumberDiv.style.display = 'flex';

  setTimeout(() => {
    channelNumberDiv.style.display = 'none';
    currentKey = '';

    const index = channelNumber - 1;
    if (index < 0 || index >= channelNames.length) return;

    // ‡∏´‡∏≤ category ‡∏ó‡∏µ‡πà‡∏ä‡πà‡∏≠‡∏á‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà
    const catIndex = categories.findIndex(cat => cat.channels.includes(index));
    if (catIndex === -1) return;

    // ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á
    showChannelsInCategory(catIndex);

    // ‡πÄ‡∏•‡πà‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
    setTimeout(() => {
      loadChannelByIndex(index);

      const buttons = document.querySelectorAll('.channel-button');
      const btn = Array.from(buttons).find(b => b.innerText.includes(channelNames[index]));
      if (btn) {
        btn.focus();
      }
    }, 300); // ‡∏´‡∏ô‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏õ‡∏∏‡πà‡∏°‡∏ñ‡∏π‡∏Å‡πÄ‡∏£‡∏ô‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏Å‡πà‡∏≠‡∏ô
  }, 1000); // ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏Å‡πà‡∏≠‡∏ô‡πÇ‡∏´‡∏•‡∏î
}

    });

    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡πÇ‡∏´‡∏°‡∏î fullscreen ‡πÄ‡∏°‡∏∑‡πà‡∏≠ video ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏•‡πà‡∏ô
    video.addEventListener('play', () => {
  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
  if (/Mobi|Android/i.test(navigator.userAgent)) {
    if (video.requestFullscreen) {
      video.requestFullscreen();
    } else if (video.mozRequestFullScreen) { // Firefox
      video.mozRequestFullScreen();
    } else if (video.webkitRequestFullscreen) { // Chrome, Safari and Opera
      video.webkitRequestFullscreen();
    } else if (video.msRequestFullscreen) { // IE/Edge
      video.msRequestFullscreen();
    }
  }
});

